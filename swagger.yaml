swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts/account:
    get:
      security:
          - Bearer: []
      tags:
        - Account and Transactions Module
      summary: Edit an account by Id
      description: API for editing accounts 
      parameters:
        - in: path
          name: userId
          description: ID of user
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account retrieved successully
          schema:
            $ref: '#/definitions/AccountResponse'
        '400':
          description: Invalid Fields
        '404':
          description: User not found
        '500':
          description: Internal Server Error
  /user/accounts/account/{accountId}:
    get:
      security:
          - Bearer: []
      tags:
        - Account and Transactions Module
      summary: Edit a transactions by Id
      description: API for editing a transaction by id
      operationId: getTransactionById
      parameters:
        - in: path
          name: accountId
          description: ID of an account
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account retrieved successully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /user/accounts/account/{accountId}/transactions/{transactionId}/category:
    put:
      security:
        - Bearer: []
      tags: 
        - Account and Transactions Module
      summary: Update a category
      description: Update a category by selecting in a list of categories
      parameters:
        - in: body
          name: category
          description: select a category
          required: true
          schema:
            $ref: '#/definitions/TransactionCategory'
      produces:
        - application/json
      responses:
        '200':
          description: transaction's category update successully
          schema:
            $ref: '#/definitions/TransactionCategory'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /user/accounts/account/{accountId}/transactions/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags:
        - Account and Transactions Module
      summary: Add a note
      description: Add a note after selecting pencil
      parameters:
        - name: transactionId
          in: path
          description: Id of a transaction
          required: true
          type: string
        - in: body
          name: body
          description: user can add a new note
          required: true
          schema:
            $ref: '#/definitions/TransactionNote'
      produces:
        - application/json
      responses:
        '200':
          description: note added successully
          schema:
            $ref: '#/definitions/TransactionNote'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Account and Transactions Module
      summary: Update a note
      description: Update a note after selecting pencil
      parameters:
        - name: transactionId
          in: path
          description: Id of a transaction
          required: true
          type: string
        - in: body
          name: body
          description: user can update a note
          required: true
          schema:
            $ref: '#/definitions/TransactionNote'
      produces:
        - application/json
      responses:
        '200':
          description: note update successully
          schema:
            $ref: '#/definitions/TransactionNote'
        '400':
          description: Invalid Fields
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
      
      
    
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  AccountResponse:
      type: object
      properties:
        accountId:
          type: string
          description: account ID
        accountName:
          type: string
          description: account name
        accountCurrency:
          type: string
          description: account currency
        currentBalance:
          type: number
          description: current account balance
  TransactionResponse:
      type: object
      properties:
        transactionID: 
          type: string
          description: transaction ID
        transactionType:
          type: string
          description: type of transaction
        date:
          type: string
          format: date-time
          description: date of transaction
        description:
          type: string
          description: description of transaction
        amount:
          type: number
          description: transaction amout
        balance:
          type: number
          description: available balance
          format: double
        category:
          type: string
          description: name of the category
        note: 
          type: string
          description: user note
  TransactionCategory:
    type: object
    properties:
      category:
        type: string
  TransactionNote:
    type: object
    properties:
      note:
        type: string
     
        
      
